[{"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\index.js":"1","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\App.js":"2","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\reportWebVitals.js":"3","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\LoginPage.js":"4","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\ProtectedRoute.js":"5","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\auth.js":"6","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\WorkCenter.js":"7","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\AdminPage.js":"8","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\TechyPage.js":"9","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\NewCustomer.js":"10","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\Customers.js":"11","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\CustomerDetails.js":"12","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\NewWorkOrder.js":"13","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\WorkOrders.js":"14","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\NewTechnician.js":"15","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\SuperAdminPage.js":"16","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\TechWorkOrders.js":"17","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\Technicians.js":"18","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\SuperAdminWorkOrders.js":"19","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\CustomerEdit.js":"20"},{"size":478,"mtime":1608025724042,"results":"21","hashOfConfig":"22"},{"size":994,"mtime":1609835727185,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2248,"mtime":1608632821052,"results":"25","hashOfConfig":"22"},{"size":651,"mtime":1608024373484,"results":"26","hashOfConfig":"22"},{"size":1240,"mtime":1608632952638,"results":"27","hashOfConfig":"22"},{"size":471,"mtime":1608632741246,"results":"28","hashOfConfig":"22"},{"size":2400,"mtime":1609777713622,"results":"29","hashOfConfig":"22"},{"size":896,"mtime":1609778342267,"results":"30","hashOfConfig":"22"},{"size":4557,"mtime":1608143045771,"results":"31","hashOfConfig":"22"},{"size":1759,"mtime":1609835788630,"results":"32","hashOfConfig":"22"},{"size":3348,"mtime":1609777422297,"results":"33","hashOfConfig":"22"},{"size":10144,"mtime":1608734252835,"results":"34","hashOfConfig":"22"},{"size":8329,"mtime":1609776741500,"results":"35","hashOfConfig":"22"},{"size":3898,"mtime":1609410164417,"results":"36","hashOfConfig":"22"},{"size":3517,"mtime":1609777780179,"results":"37","hashOfConfig":"22"},{"size":8602,"mtime":1608737722672,"results":"38","hashOfConfig":"22"},{"size":668,"mtime":1609411328818,"results":"39","hashOfConfig":"22"},{"size":5036,"mtime":1609672775483,"results":"40","hashOfConfig":"22"},{"size":3705,"mtime":1609839908900,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zt6zoj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\index.js",[],["84","85"],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\App.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\reportWebVitals.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\LoginPage.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\auth.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\WorkCenter.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\AdminPage.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\TechyPage.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\NewCustomer.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\Customers.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\CustomerDetails.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\NewWorkOrder.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\WorkOrders.js",["86"],"import { useState } from 'react'\r\n\r\nconst WorkOrders = () => {\r\n\r\n    const [sortBy, setSortBy] = useState('All');\r\n    const [filterBy, setFilterBy] = useState('All');\r\n    const [searchBy, setSearchBy] = useState('Customer Name');\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n    let workOrders = JSON.parse(localStorage.getItem('workOrders'));\r\n    let customers = JSON.parse(localStorage.getItem('customers'));\r\n\r\n    const getCustomerInfo = (id) => {\r\n        let customer = customers.filter(item => item.id === id);\r\n        return customer[0];\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'sortBy') {\r\n            setSortBy(value);\r\n        }\r\n        else if (name === 'filterBy') {\r\n            setFilterBy(value);\r\n        }\r\n        else if (name === 'searchBy') {\r\n            setSearchBy(value);\r\n        }\r\n        else if (name === 'searchInput') {\r\n            setSearchInput(value);\r\n        }\r\n    }\r\n\r\n    //will return a sorted array based on sort preference\r\n    const sortedBy = (array) => {\r\n        if (sortBy === 'All') {\r\n            return array;\r\n        }\r\n        else if (sortBy === 'Customer') {\r\n            return array.sort((a, b) => a.customerId - b.customerId);\r\n        }\r\n        else if (sortBy === 'Technician') {\r\n            return array.sort((a, b) => a.assignedTechnician - b.assignedTechnician);\r\n        }\r\n        else if (sortBy === 'Date') {\r\n            return array.sort((a, b) => a.dateCreated - b.dateCreated);\r\n        }\r\n    }\r\n    //will return an array of workorders based on status chosen\r\n    const filteredBy = (array) => {\r\n        if (filterBy === 'All') {\r\n            return array;\r\n        }\r\n        else if (filterBy === 'Open') {\r\n            return array.filter(item => item.status === 'Open');\r\n        }\r\n        else if (filterBy === 'Closed') {\r\n            return array.filter(item => item.status === 'Closed');\r\n        }\r\n        else if (filterBy === 'Unclaimed') {\r\n            return array.filter(item => item.techClaimed === 'Unclaimed');\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //will return an array of workorders based on search input\r\n    const handleSearchInputFiltering = () => {\r\n        if (searchInput) {\r\n            if (searchBy === 'Customer Name') {\r\n                let searchInputCustomerNameResults = customers.filter(item => item.name.toLowerCase().includes(searchInput.toLowerCase()));\r\n                let searchInputCustomerIds = searchInputCustomerNameResults.map(item => item.id);\r\n                let arrayOfWorkOrders = [];\r\n                searchInputCustomerIds.forEach(index => { arrayOfWorkOrders.push(...workOrders.filter(item => item.customerId === index)) });\r\n                if (arrayOfWorkOrders) {\r\n                   return arrayOfWorkOrders;\r\n                }\r\n                else {\r\n                    setErrorMessage('No results found, try another field or check input');\r\n                    return workOrders;\r\n                }\r\n            }\r\n            else if(searchBy === 'Customer ID'){\r\n                let searchInputCustomerIdResults = customers.filter(item=>item.id.toString().includes(searchInput.toString()));\r\n                let searchInputCustomerIds = searchInputCustomerIdResults.map(item=>item.id);\r\n                let arrayOfWorkOrders = [];\r\n                searchInputCustomerIds.forEach(index=>{arrayOfWorkOrders.push(...workOrders.filter(item=>item.customerId === index))});\r\n                if (arrayOfWorkOrders) {\r\n                    return arrayOfWorkOrders;\r\n                }\r\n                else {\r\n                    setErrorMessage('No results found, try another field or check input');\r\n                    return workOrders;\r\n                }\r\n            }\r\n            else if(searchBy === 'Work Order ID'){\r\n                let searchInputWorkOrderIdResults = workOrders.filter(item=>item.workOrderId.toString().includes(searchInput.toString()));\r\n                if (searchInputWorkOrderIdResults) {\r\n                    return searchInputWorkOrderIdResults;\r\n                }\r\n                else {\r\n                    setErrorMessage('No results found, try another field or check input');\r\n                    return workOrders;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return workOrders;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='workOrderSelectCon'>\r\n                <label>Filter Options</label>\r\n                <select\r\n                    name='filterBy'\r\n                    value={filterBy}\r\n                    onChange={(e) => handleChange(e)}>\r\n                    <option>All</option>\r\n                    <option>Open</option>\r\n                    <option>Closed</option>\r\n                    <option>Unclaimed</option>\r\n                </select>\r\n                <label>Sorting Options</label>\r\n                <select\r\n                    name='sortBy'\r\n                    value={sortBy}\r\n                    onChange={(e) => handleChange(e)}>\r\n                    <option>All</option>\r\n                    <option>Customer</option>\r\n                    <option>Technician</option>\r\n                    <option>Date</option>\r\n                </select>\r\n            </div>\r\n            <div className='workOrderSearchCon'>\r\n                <select\r\n                    name='searchBy'\r\n                    value={searchBy}\r\n                    onChange={(e) => handleChange(e)}>\r\n                    <option>Customer Name</option>\r\n                    <option>Customer ID</option>\r\n                    <option>Work Order ID</option>\r\n                </select>\r\n                <input\r\n                    type='text'\r\n                    name='searchInput'\r\n                    value={searchInput}\r\n                    onChange={(e) => handleChange(e)} />\r\n            </div>\r\n            {workOrders ? sortedBy(filteredBy(handleSearchInputFiltering())).map(item =>\r\n                <div className='workOrderCon' key={item.workOrderId}>\r\n                    <div>\r\n                        <label>CUSTOMER</label>\r\n                        <p className='workOrderInfo'>{getCustomerInfo(item.customerId).name} {getCustomerInfo(item.customerId).surname}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>CUSTOMER ID</label>\r\n                        <p className='workOrderInfo'>{item.customerId}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>DATE RECEIVED</label>\r\n                        <p className='workOrderInfo'>{item.dateContacted}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>DATE CREATED</label>\r\n                        <p className='workOrderInfo'>{item.dateCreated}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>TECHNICIAN</label>\r\n                        <p className='workOrderInfo'>{item.assignedTechnician}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>DESCRIPTION</label>\r\n                        <p className='workOrderInfo'>{item.workOrderDescription}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>WORK ORDER ID</label>\r\n                        <p className='workOrderInfo'>{item.workOrderId}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>STATUS</label>\r\n                        <p className='workOrderInfo'>{item.status}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>TECHNICIAN CLAIMED</label>\r\n                        <p className='workOrderInfo'>{item.techClaimed === 'Claimed' ? 'YES' : 'NO'}</p>\r\n                    </div>\r\n                </div>) : <p>no work orders</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkOrders;\r\n\r\n/*\r\n    \r\n    \r\n */\r\n\r\n/*\r\noutline: Have a function that returns an array of the work orders based on the filter and search options.\r\nstep 1) Need to filter array based on any search input.\r\nstep 2) Need to filter array based on the sorted and filtered values from the dropdown selectors.\r\nstep 3) Return the filtered array.\r\n*/","C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\NewTechnician.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\SuperAdminPage.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\TechWorkOrders.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\Technicians.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\SuperAdminWorkOrders.js",[],"C:\\Users\\Stephen\\Desktop\\ProjectsReact\\work-order\\src\\components\\CustomerEdit.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":9,"column":12,"nodeType":"93","messageId":"94","endLine":9,"endColumn":24},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]